export const placesABI = [
	'constructor(address placesDAO, address grounders, address placesDescriptor, address placesProvider, address _proxyAddress)',
	'event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)',
	'event ApprovalForAll(address indexed owner, address indexed operator, bool approved)',
	'event DescriptorUpdated(address descriptor)',
	'event GroundersGiftingEnabledUpdated(bool isEnabled)',
	'event GroundersUpdated(address grounders)',
	'event GuestlistEnabledUpdated(bool isEnabled)',
	'event MintFeeUpdated(uint256 mintFee)',
	'event NeighborhoodTreasuryEnabledUpdated(bool isEnabled)',
	'event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)',
	'event Paused(address account)',
	'event PlaceBurned(uint256 tokenId)',
	'event PlaceCreated(uint256 tokenId)',
	'event PlacesDAOUpdated(address placesDao)',
	'event PlacesProviderUpdated(address provider)',
	'event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)',
	'event Unpaused(address account)',
	'function GEO_RESOLUTION_INT() view returns (int256)',
	'function MAX_LATITUDE_INT() view returns (int256)',
	'function MAX_LONGITUDE_INT() view returns (int256)',
	'function MIN_LATITUDE_INT() view returns (int256)',
	'function MIN_LONGITUDE_INT() view returns (int256)',
	'function approve(address to, uint256 tokenId)',
	'function balanceOf(address owner) view returns (uint256)',
	'function burn(uint256 tokenId)',
	'function getApproved(uint256 tokenId) view returns (address)',
	'function name() view returns (string)',
	'function owner() view returns (address)',
	'function ownerOf(uint256 tokenId) view returns (address)',
	'function paused() view returns (bool)',
	'function proxyRegistry() view returns (address)',
	'function renounceOwnership()',
	'function safeTransferFrom(address from, address to, uint256 tokenId)',
	'function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)',
	'function setApprovalForAll(address operator, bool approved)',
	'function symbol() view returns (string)',
	'function tokenByIndex(uint256 index) view returns (uint256)',
	'function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)',
	'function totalSupply() view returns (uint256)',
	'function transferFrom(address from, address to, uint256 tokenId)',
	'function transferOwnership(address newOwner)',
	'function setPlacesDAO(address placesDAO)',
	'function setGrounders(address grounders)',
	'function setPlacesProvider(address placesProvider)',
	'function setDescriptor(address placesDescriptor)',
	'function setPaused(bool paused)',
	'function setCounter(uint256 _countValue)',
	'function setGuestlistEnabled(bool isGuestlistEnabled)',
	'function setGuestlist(address[] guestlist)',
	'function addGuest(address guestAddress)',
	'function setGroundersGifting(bool isGroundersGiftingEnabled)',
	'function setMintFee(uint256 mintFee)',
	'function setNeighborhoodTreasury(bool isNeighborhoodTreasuryEnabled)',
	'function isApprovedForAll(address owner, address operator) view returns (bool)',
	'function getLocation(uint256 tokenId) view returns (tuple(int256 latitudeInt, int256 longitudeInt, int256 altitudeInt, bool hasAltitude, string latitude, string longitude, string altitude))',
	'function getPlace(uint256 tokenId) view returns (tuple(string name, string streetAddress, string sublocality, string locality, string subadministrativeArea, string administrativeArea, string country, string postalCode, string countryCode, tuple(int256 latitudeInt, int256 longitudeInt, int256 altitudeInt, bool hasAltitude, string latitude, string longitude, string altitude) location, string[3] attributes))',
	'function getPlaceSupply() view returns (uint256 supplyCount)',
	'function getMintFeeInWei() view returns (uint256 currentMintFee)',
	'function getGroundersGiftingEnabled() view returns (bool isEnabled)',
	'function getNeighborhoodTreasuryEnabled() view returns (bool isEnabled)',
	'function mint() payable returns (uint256)',
	'function grounderMint(uint256 tokenId) returns (uint256)',
	'function ownerMint(uint256 tokenId) returns (uint256)',
	'function tokenURI(uint256 tokenId) view returns (string)',
	'function supportsInterface(bytes4 interfaceId) view returns (bool)',
	'function contractURI(uint256 tokenId) view returns (string)',
]
